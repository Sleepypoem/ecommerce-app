spring:
  datasource:
    url: jdbc:mysql://${MYSQL_HOST:127.0.0.1}:${MYSQL_PORT:3306}/${MYSQL_DATABASE:ecommerce}
    username: ${MYSQL_USERNAME:admin}
    password: ${MYSQL_PASSWORD:password}
  jpa:
    properties:
      hibernate:
        format_sql: true
    hibernate:
      ddl-auto: create-drop
    defer-datasource-initialization: true
  sql:
    init:
      mode: always
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${auth-server.prefix}${auth-server.realm-name}
          jwk-set-uri: ${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs
auth-server:
  realm-name: Final-project
  prefix: http://${LOCAL_HOST:localhost}:8080/auth/realms/
  admin-rest-prefix: http://localhost:8080/auth/admin/realms/
  token-endpoint: ${auth-server.prefix}${auth-server.realm-name}/protocol/openid-connect/token
  client-id: paste-your-client-id
  client-secret: paste-your-client-secret
  admin-username: paste-your-admin-username
  admin-password: paste-your-admin-password
server:
  port: 8081
  servlet:
    contextPath: /api

management:
  endpoints:
    web:
      exposure.include: health, metrics, loggers
  endpoint:
    health:
      show-details: always

logging:
  level:
    org:
      springframework:
        security: DEBUG
        hibernate:
          SQL: DEBUG
          type:
            descriptor:
              sql:
                BasicBinder: TRACE
keycloak:
  use-resource-role-mappings: false

stripe:
  public-key: paste-your-public-key
  secret-key: paste-your-secret-key

custom:
  super-admin-token: paste-your-super-admin-token-here